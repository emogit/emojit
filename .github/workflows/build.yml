name: Build

on:
  push:
    branches:
    - main
    paths-ignore:
    - '.gitignore'
    - '.gitattributes'
    - '*.md'
    - 'LICENSE.txt'
    - '*/*.md'
    - '*/.gitignore'
  pull_request:
    branches:
    - main
    paths-ignore:
    - '.gitignore'
    - '.gitattributes'
    - '*.md'
    - 'LICENSE.txt'
    - '*/*.md'
    - '*/.gitignore'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          # Use Node 16 because Node 18 has issues with webpack 4.
          # There is a workaround, but it's still good to specify a specific Node version that we know works well here.
          # Details in: https://github.com/webpack/webpack/issues/14532
          node-version: 16

      - name: "Root: Install"
        run: |
          set -ex
          yarn install

      - name: "Lint"
        # Split Lint into a separate task so that it can always run.
        run: yarn lint

      # Core
      - name: "Core: Install"
        run: |
          set -ex
          yarn install
        working-directory: core

      - name: "Core: Test"
        run: yarn test --invert --fgrep Integration
        working-directory: core

      - name: "Core: Lint"
        # Split Lint into a separate task so that it can always run even if the tests fail.
        run: yarn lint
        working-directory: core
        if: success() || failure()

      - name: "Core: Build"
        run: |
          set -ex
          yarn build
        working-directory: core

      - name: "Core: Publish"
        if: github.ref == 'refs/heads/main'
        run: |
          set -ex
          yarn npm publish || echo "Might already be published."
          # TODO Publish the beta or next version.
          # yarn npm tag remove @emogit/emojit-core next || echo "Might not be pulished yet."
          # FIXME The next line thinks that it's already published. It seems like it doesn't care about the tag.
          # yarn npm publish --tag next
        working-directory: core
        env:
          EMOGIT_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # React Core
      - name: "React Core: Install"
        run: |
          set -ex
          yarn install
        working-directory: react-core

      - name: "React Core: Test"
        run: yarn test
        working-directory: react-core

      - name: "React Core: Lint"
        # Split Lint into a separate task so that it can always run even if the tests fail.
        run: yarn lint
        working-directory: react-core
        if: success() || failure()

      - name: "React Core: Build"
        run: |
          set -ex
          yarn build
          yarn copy-files
        working-directory: react-core

      - name: "React Core: Publish"
        if: github.ref == 'refs/heads/main'
        run: |
          set -ex
          yarn npm publish || echo "Might already be published."
          # TODO Publish the beta or next version.
        working-directory: react-core
        env:
          EMOGIT_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Extension
      - name: "Extension: Install"
        run: yarn install
        working-directory: extension

      - name: "Extension: Test"
        run: yarn test
        working-directory: extension

      - name: "Extension: Lint"
        # Split Lint into a separate task so that it can always run even if the tests fail.
        run: yarn lint
        working-directory: extension
        if: success() || failure()

      - name: "Extension: Build"
        run: |
          set -ex
          yarn build chrome
          # Make sure the packages get created.
          ls -lh packages/emojit-extension.v*chrome.zip
          yarn build firefox
          ls -lh packages/emojit-extension.v*firefox.xpi.zip

          # Delete extra files.
          cd packages
          zip -d emojit-extension.v*chrome.zip */*.ts scripts/*/*.{ts,tsx} */*.d.js scripts/{i18n_helper,url_helper,user}.js scripts/styles/*
          zip -d emojit-extension.v*firefox.xpi.zip */*.ts scripts/*/*.{ts,tsx} */*.d.js scripts/{i18n_helper,url_helper,user}.js scripts/styles/*
          ls -lh

          md5sum *
          sha256sum *
        working-directory: extension

      - name: "Upload Chrome Artifact"
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: chrome-ext
          path: extension/packages/*chrome*
          if-no-files-found: error

      - name: "Upload Firefox Artifact"
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: firefox-add-on
          path: extension/packages/*firefox*
          if-no-files-found: error

      # Site
      - name: "Site: Install"
        run: yarn install
        working-directory: site

      - name: "Site: Lint"
        # Split Lint into a separate task so that it can always run even if the tests fail.
        run: yarn lint
        working-directory: site
        if: success() || failure()

      # TODO Test the site. It fails because of jest and TypeScript issues.

      - name: "Site: Build"
        run: yarn build
        working-directory: site
