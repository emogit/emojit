name: Build

on:
  push:
    branches:
    - main
    - ci-test
  pull_request:
    branches:
    - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: "Root: Install"
        run: |
          set -ex
          yarn install

      - name: "Lint"
        # Split Lint into a separate task so that it can always run.
        run: yarn lint

      - name: "Core: Install"
        run: |
          set -ex
          yarn install
        working-directory: core

      - name: "Core: Test"
        run: yarn test --invert --fgrep Integration
        working-directory: core
      
      - name: "Core: Lint"
        # Split Lint into a separate task so that it can always run even if the tests fail.
        run: yarn lint
        working-directory: core
        if: success() || failure()

      - name: "Core: Build"
        run: |
          set -ex
          yarn build
        working-directory: core

      - name: "Core: Publish"
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/ci-test'
        run: |
          set -ex
          yarn npm publish || echo "Might already be published."
          # TODO Publish the beta or next version.
          # yarn npm tag remove @emogit/emojit-core next || echo "Might not be pulished yet."
          # FIXME The next line thinks that it's already published. It seems like it doesn't care about the tag.
          # yarn npm publish --tag next
        working-directory: core
        env:
          EMOGIT_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Extension
      - name: "Extension: Install"
        run: yarn install
        working-directory: extension

      - name: "Extension: Test"
        run: yarn test
        working-directory: extension

      - name: "Extension: Lint"
        # Split Lint into a separate task so that it can always run even if the tests fail.
        run: yarn lint
        working-directory: extension
        if: success() || failure()

      - name: "Extension: Build"
        run: |
          set -ex
          yarn build chrome
          # Make sure the package gets created.
          ls packages/emojit.v*chrome.zip
          yarn build firefox
          ls packages/emojit.v*firefox.xpi.zip
        working-directory: extension
