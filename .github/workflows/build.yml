name: Build

on:
  push:
    branches:
    - main
    # - use-emojit-core
  pull_request:
    branches:
    - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        # Directory for run steps.
        working-directory: core

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: "Core: Install"
        run: |
          set -ex
          yarn install
        env:
          EMOGIT_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Core: Test"
        run: yarn test

      - name: "Core: Build"
        run: |
          set -ex
          yarn build
        # env:
        #   EMOGIT_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Core: Publish"
        if: github.ref == 'refs/heads/master'
        run: |
          set -ex
          yarn npm publish
        env:
          # NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EMOGIT_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Extension
      - name: "Extension: Install"
        run: yarn install
        working-directory: extension
        env:
          EMOGIT_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Extension: Test"
        run: yarn test
        working-directory: extension

      - name: "Extension: Lint"
        # Split Lint into a separate task so that it can always run even if the tests fail.
        run: yarn lint
        if: success() || failure()
        working-directory: extension

      - name: "Extension: Build"
        run: yarn build chrome
        working-directory: extension
